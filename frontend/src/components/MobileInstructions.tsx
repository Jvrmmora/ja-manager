import React from 'react';
import { motion } from 'framer-motion';
import { useDeviceDetection } from '../hooks/useDeviceDetection';
import { useTheme } from '../context/ThemeContext';

interface MobileInstructionsProps {
  onContinue: () => void;
  onCancel: () => void;
}

const MobileInstructions: React.FC<MobileInstructionsProps> = ({
  onContinue,
  onCancel
}) => {
  const deviceInfo = useDeviceDetection();
  const { isDark } = useTheme();

  const getInstructions = () => {
    if (deviceInfo.isIOS && deviceInfo.isSafari) {
      return {
        title: 'üì± Instrucciones para Safari iOS',
        steps: [
          'Cuando aparezca la ventana de permisos, toca "Permitir"',
          'Si no aparece, verifica en Configuraci√≥n > Safari > C√°mara',
          'Aseg√∫rate de que el sitio tenga permisos de c√°mara',
          'Mant√©n el c√≥digo QR centrado en la pantalla'
        ]
      };
    }

    if (deviceInfo.isIOS && deviceInfo.isChrome) {
      return {
        title: 'üì± Instrucciones para Chrome iOS',
        steps: [
          'Toca "Permitir" cuando se soliciten permisos de c√°mara',
          'Si no funciona, prueba refrescando la p√°gina',
          'Verifica que Chrome tenga permisos de c√°mara en iOS',
          'Apunta la c√°mara directamente al c√≥digo QR'
        ]
      };
    }

    if (deviceInfo.isAndroid && deviceInfo.isChrome) {
      return {
        title: 'üì± Instrucciones para Android Chrome',
        steps: [
          'Toca "Permitir" en la ventana de permisos',
          'Si se bloquea, toca el √≠cono de c√°mara en la barra de direcciones',
          'Aseg√∫rate de tener buena iluminaci√≥n',
          'Mant√©n el tel√©fono estable al escanear'
        ]
      };
    }

    return {
      title: 'üì± Instrucciones Generales',
      steps: [
        'Tu navegador solicitar√° permisos de c√°mara',
        'Toca "Permitir" o "Aceptar" cuando aparezca',
        'Apunta la c√°mara al c√≥digo QR',
        'Mant√©n el c√≥digo centrado en el marco'
      ]
    };
  };

  const instructions = getInstructions();

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="p-6 max-w-md mx-auto"
    >
      <div className="text-center mb-6">
        <h3 className={`text-lg font-semibold mb-2 ${
          isDark ? 'text-white' : 'text-gray-900'
        }`}>
          {instructions.title}
        </h3>
        <p className={`text-sm ${
          isDark ? 'text-gray-300' : 'text-gray-600'
        }`}>
          Antes de continuar, revisa estas instrucciones:
        </p>
      </div>

      <div className="space-y-3 mb-8">
        {instructions.steps.map((step, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.1 }}
            className={`flex items-start gap-3 p-3 rounded-lg ${
              isDark ? 'bg-gray-700/50' : 'bg-gray-50'
            }`}
          >
            <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${
              isDark ? 'bg-blue-600 text-white' : 'bg-blue-500 text-white'
            }`}>
              {index + 1}
            </div>
            <p className={`text-sm ${
              isDark ? 'text-gray-300' : 'text-gray-700'
            }`}>
              {step}
            </p>
          </motion.div>
        ))}
      </div>

      <div className="space-y-3">
        <button
          onClick={onContinue}
          className="w-full px-4 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors font-medium"
        >
          Entendido, Continuar
        </button>
        <button
          onClick={onCancel}
          className={`w-full px-4 py-3 rounded-lg transition-colors font-medium ${
            isDark 
              ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' 
              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
          }`}
        >
          Cancelar
        </button>
      </div>

      {/* Nota adicional para m√≥viles */}
      {deviceInfo.isMobile && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.5 }}
          className={`mt-4 p-3 rounded-lg text-xs text-center ${
            isDark ? 'bg-yellow-900/30 text-yellow-300' : 'bg-yellow-50 text-yellow-700'
          }`}
        >
          üí° <strong>Consejo:</strong> Si tienes problemas, intenta rotar tu dispositivo o usar mejor iluminaci√≥n
        </motion.div>
      )}
    </motion.div>
  );
};

export default MobileInstructions;